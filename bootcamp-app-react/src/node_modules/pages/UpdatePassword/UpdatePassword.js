import React from 'react'
import { useState, useEffect } from 'react'
import { Redirect } from 'react-router-dom'
import axios from 'axios'
import Input from "components/Input/Input";
import Button from "components/Button/Button";
import './UpdatePassword.css'
import passwordValidator from 'helpers/passwordValidator'

const updateUrl = 'http://devcamp-api-node.herokuapp.com/api/v1/auth/updatepassword'


const UpdatePassword = () => {
    const [currentPassword, setCurrentPassword] = useState('')
    const [newPassword, setNewPassword] = useState('')
    const [confirmNewPassword, setConfirmNewPassword] = useState('')
    const [isUpdated, setIsUpdated] = useState(false)

    const inputChangeHandler = e => {
        switch(e.target.name) {
            case 'current_password': setCurrentPassword(e.target.value)
            case 'new_password': setNewPassword(e.target.value)
            case 'confirm_new_password': setConfirmNewPassword(e.target.value)
        }
    }

    const submitHandler = e => {
        e.preventDefault()

        const userPasswords = { currentPassword, newPassword }
        
        axios.put(updateUrl, userPasswords, {
            headers: {
                'Authorization': `Bearer ${localStorage.getItem('token')}` 
              }
        }).then(() => {setIsUpdated(true)})
        .catch((err) => console.log('error ->', err))
    }

    useEffect(() => {
        if(confirmNewPassword === '') {
            document.querySelector('.warnings').classList.remove('show')
            return
         }
        if(!passwordValidator(newPassword, confirmNewPassword)) {
            let label = document.querySelector('.warnings')
                label.classList.add('show')
                label.innerText = 'Passwords mismatch!'
        }

    }, [ confirmNewPassword ])


    if(isUpdated) {
        return <Redirect to={'/'} />
    }


    return (
        <div className={'update_container'} >
            <form onSubmit={submitHandler} className={'update_form'}>
                <div className={'update_title'}><h1>Update Password</h1></div>
                <p className={'label'}>Current Password</p>
                <p className='warnings'></p>
                <Input
                    type={'password'}
                    className={'update'}
                    title={'Current Password'}
                    name={'current_password'}
                    onChangeInput={inputChangeHandler}
                />
                <p className={'label'}>New Password</p>
                <Input
                    type={'password'}
                    className={'update'}
                    title={'New Password'}
                    name={'new_password'}
                    onChangeInput={inputChangeHandler}
                />
                <p className={'label'}>Confirm New Password</p>
                <Input
                    type={'password'}
                    className={'update'}
                    title={'Confirm New Password'}
                    name={'confirm_new_password'}
                    onChangeInput={inputChangeHandler}
                />
                <Button className={'update'} title={'Update Password'} width={'100%'}/>
            </form>
        </div>
    )
}

export default UpdatePassword