import React, { useState } from 'react'
import { connect } from 'react-redux'
import { Redirect } from 'react-router-dom'
import Input from 'components/Input/Input'
import Button from 'components/Button/Button'
import axios from 'axios'
import './UpdateUserDetails.css'

const updateUserUrl = 'http://devcamp-api-node.herokuapp.com/api/v1/auth/updatedetails'

const UpdateUserDetails = props => {
    
    const [email, setEmail] = useState('')
    const [name, setName] = useState('')
    const [done, setDone ] = useState(false)

    const submitHandler = e => {
        e.preventDefault()
        const user = { email, name }

        props.upUserEmail(email)
        props.upUserName(name)
    
        axios.put(updateUserUrl, user, {
            headers: {
                'Authorization': `Bearer ${localStorage.getItem('token')}` 
              }
        })
            .then((res) => {
                props.addUserId(res.data.data._id)
                setDone(true)
            })
            .catch(error => { console.log(' update user error----->',error) })
    }

    const inputChangeHandler = e => {
        switch (e.target.name) {
            case 'user_email': setEmail(e.target.value);break;
            case 'user_name': setName(e.target.value);break;
        }
    }

    if(done) {
        return <Redirect to={'/'} />
    }

    return (
        <div className={'up_user_container'} >
            <form onSubmit={submitHandler} className={'up_user_form'}>
                <div className={'up_user_title'}>
                    <h1>Update User Details</h1>
                    </div>
                <p className={'label'}>New Name</p>
                <Input
                    className={'up_user'}
                    title={'Username'}
                    name={'user_name'}
                    onChangeInput={inputChangeHandler}
                />
                <p className={'label'}> New Email</p>
                <Input
                    className={'up_user'}
                    title={'Email'}
                    name={'user_email'}
                    onChangeInput={inputChangeHandler}
                />
                <Button className={'up_user'} title={'Update User'} />
            </form>
        </div>
    )
}


function mapDispatchToProps(dispatch) {
    return {
        upUserEmail: info => dispatch({ type: 'UPDATE_EMAIL', payload: info }),
        upUserName: info => dispatch({ type: 'UPDATE_USERNAME', payload: info }),
        addUserId: info => dispatch({ type: 'ADD_ID', payload: info})
    }
}


export default connect(null, mapDispatchToProps) (UpdateUserDetails)