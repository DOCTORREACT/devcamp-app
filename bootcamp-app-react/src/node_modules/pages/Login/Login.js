import React, { useState } from 'react'
import { NavLink, Redirect } from "react-router-dom";
import { connect } from "react-redux";
import axios from "axios";
import './Login.css'
import LoginIcon from 'icons/loginIcon'
import Input from 'components/Input/Input'
import Button from 'components/Button/Button'


const loginUrl = 'http://devcamp-api-node.herokuapp.com/api/v1/auth/login'

const Login = props => {

    const [email, setEmail] = useState('')
    const [password, setPassword] = useState('')
    const [isLogin, setIsLogin] = useState(false)

    const submitHandler = e => {
        e.preventDefault()
        const user = { email, password }

    if(password.length === 0 || email.length === 0) {
        return 
    }      
        axios.post(loginUrl, user)
            .then((res) => {
                props.addLoginToken(res.data.token)
                props.addInSystemStatus(true)
                setIsLogin(true)
            })
               
            .catch(error =>  console.log('error----->', error)
            )}

    const inputChangeHandler = e => {
        switch (e.target.name) {
            case 'user_email': setEmail(e.target.value);break;
            case 'user_password': setPassword(e.target.value);break;
        }
    }

    if(isLogin) {
        return <Redirect to={'/'} />
    }

    return (
        <div className={'login_container'} >
            <form onSubmit={submitHandler} className={'login_form'}>
                <div className={'login_title'}>
                    <LoginIcon />
                    <h1>Login</h1>
                    </div>
                <p>Log in to list your bootcamp or rate, review and favorite bootcamps</p>
                <p className={'label'}> Email</p>
                <Input
                    className={'login'}
                    title={'Email'}
                    name={'user_email'}
                    onChangeInput={inputChangeHandler}
                />
                <p className={'label'}>Password</p>
                <Input
                    type={'password'}
                    className={'login'}
                    title={'Password'}
                    name={'user_password'}
                    onChangeInput={inputChangeHandler}
                />
                <Button className={'login'} title={'Login'} />
            </form>
            <div className={'login_links_box'}>
            <NavLink to={'/'} className={'login_link_forgot'}>Forgot password?</NavLink>
            <NavLink to={'/reset'} className={'login_link_reset'}>Reset password?</NavLink>
            </div>
        </div>
    )
}

function mapStateToProps(state) {
    return {
        inSystem: state.inSystem,
        loginToken: state.loginToken
    }
}

function mapDispatchToProps(dispatch) {
    return {
        addInSystemStatus: info => dispatch({ type: 'IN_SYSTEM', payload: info }),
        addLoginToken: info => dispatch({ type: 'LOGIN_TOKEN', payload: info })
    }
}

export default connect(mapStateToProps, mapDispatchToProps) (Login)

